volumes:
  # Galaxy volumes
  galaxy-postgres-data: null
  galaxy-conda: null
  # Apollo3 volumes
  apollo3-mongo-data: null
  apollo3-mongo-config: null
  apollo3-mongo-replica-data: null
  apollo3-mongo-replica-config: null
  apollo3-uploads: null
  # Apollo2 volumes
  apollo2-postgres-data: null
  apollo2-data: null

services:
  # ===== GALAXY SERVICES =====
  galaxy-app:
    build:
      context: ./containers/galaxy
      dockerfile: Dockerfile.app
    image: galaxy-app
    container_name: galaxy-app
    platform: linux/amd64
    ports:
      - "8080:80"
      - "9002:9002" # for logs
    env_file: ./.envs/.galaxy
    volumes:
      - ./logs:/home/galaxy/logs
      - ./galaxy-data:/export
      # - ../workshop:/galaxy/tools
      - ./shared_data:/shared_data
      # - galaxy-conda:/galaxy/tool_deps
    depends_on:
      galaxy-postgres:
        condition: service_healthy
    restart: unless-stopped

  galaxy-postgres:
    build:
      context: ./containers/galaxy
      dockerfile: Dockerfile.postgres
    image: galaxy-postgres
    container_name: galaxy-postgres
    env_file: ./.envs/.galaxy-postgres
    ports:
      - "5432:5432"
    volumes:
      - galaxy-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U galaxy"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # ===== APOLLO3 SERVICES =====
  apollo3-server:
    build:
      context: ./containers/apollo3
      dockerfile: Dockerfile.server
    container_name: apollo3-server
    env_file: ./.envs/.apollo3
    ports:
      - 3999:3999
    volumes:
      - ./uploads/apollo3:/data/uploads
    depends_on:
      apollo3-mongo:
        condition: service_healthy
    restart: unless-stopped

  apollo3-client:
    build:
      context: ./containers/apollo3
      dockerfile: Dockerfile.client
      args:
        JBROWSE_VERSION: 2.18.0
        APOLLO_VERSION: 0.3.1
    container_name: apollo3-client
    ports:
      - '8888:80'
    volumes:
      - ./deployment/data/:/usr/local/apache2/htdocs/data/
      - ./deployment/demoData/:/usr/local/apache2/htdocs/demoData/
    depends_on:
      - apollo3-server
    restart: unless-stopped

  apollo3-mongo:
    build:
      context: ./containers/apollo3
      dockerfile: Dockerfile.mongodb
    container_name: apollo3-mongo
    command:
      - '--replSet'
      - 'rs0'
      - '--bind_ip_all'
      - '--port'
      - '27017'
    healthcheck:
      interval: 30s
      retries: 3
      start_interval: 5s
      start_period: 2m
      test: ["CMD", "/scripts/mongo_healthcheck.sh"]
      timeout: 10s
    volumes:
      - apollo3-mongo-data:/data/db
      - apollo3-mongo-config:/data/configdb
    ports:
      - '27017:27017'
    restart: unless-stopped

  apollo3-mongo-replica:
    build:
      context: ./containers/apollo3
      dockerfile: Dockerfile.mongodb
    container_name: apollo3-mongo-replica
    command:
      - '--replSet'
      - 'rs0'
      - '--bind_ip_all'
      - '--port'
      - '27018'
    ports:
      - '27018:27018'
    volumes:
      - apollo3-mongo-replica-data:/data/db
      - apollo3-mongo-replica-config:/data/configdb
    restart: unless-stopped

  # ===== APOLLO2 SERVICES =====
  apollo2-app:
    build:
      context: ./containers/apollo2
      dockerfile: Dockerfile.apollo2
    container_name: apollo2-app
    env_file: ./.envs/.apollo2
    ports:
      - "8889:8080"  # Different port to avoid conflict with Apollo3
    volumes:
      - apollo2-data:/data
      - ./shared_data:/shared_data
    depends_on:
      apollo2-postgres:
        condition: service_healthy
    restart: unless-stopped

  apollo2-postgres:
    build:
      context: ./containers/apollo2
      dockerfile: Dockerfile.postgres
    container_name: apollo2-postgres
    env_file: ./.envs/.apollo2-postgres
    ports:
      - "5433:5432"  # Different port to avoid conflict with Galaxy postgres
    volumes:
      - apollo2-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U apollo2"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped